pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M2_HOME"
    }

     stages {
        stage('Checkout') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/cloudtechmasters/spring-boot-azure-micro-svc-sept19'
              //  sh "git clone 'https://github.com/cloudtechmasters/spring-boot-azure-micro-svc-sept19'"
            }
            
        }
        
        stage('Build') {
            steps {
                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        }
		
		stage('UploadToNexus') {
            steps {
      nexusArtifactUploader(
      nexusVersion: 'nexus3',
      protocol: 'http',
      nexusUrl: '20.198.83.181:8081',
      groupId: 'com.cloudtechmasters',
      version: '0.0.1-SNAPSHOT',
      repository: 'maven-snapshots',
      credentialsId: 'nexuscreds',
      artifacts: [
      [artifactId: 'spring-boot-azure-micro-svc-sept19',
      classifier: '',
      file: 'target/spring-boot-azure-micro-svc-sept19-0.0.1-SNAPSHOT.jar',
      type: 'jar']
      ])
      }
        }
        
        stage('Deploy') {
 
  steps {
    sh 'pwd'
    sh 'ls -lrt'
    sshPublisher(
      continueOnError: false, 
      failOnError: true,
      publishers: [
        sshPublisherDesc(
          configName: "deployserver",
          transfers: [sshTransfer(sourceFiles: 'target/spring-boot-azure-micro-svc-sept19-0.0.1-SNAPSHOT.jar')],
          verbose: true
        )
      ]
    )
  }
}
         
     }
    
}
